import streamlit as st
import pandas as pd
import numpy as np
import scipy.stats as stats
import plotly.express as px
import plotly.graph_objects as go
import plotly.figure_factory as ff
from plotnine import *


if "data" not in st.session_state:
    df = pd.read_excel("Exporta√ß√£o_Brasileira_Anual.xlsx", index_col=None)
    df = df.sort_values(by="Data", ascending=False)
    st.session_state["data"] = df

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Dashboard de Distribui√ß√µes Probabil√≠sticas", layout="wide")

# Adicionando o logo
st.logo("eu.jpg")

# Adicionando o logo
st.image("eu.jpg", width=150)

# Criando as sub-abas (pages)
pages = st.sidebar.selectbox("Escolha o que quer ver:", [
    "Dados",
    "Analise seus Dados"
])

st.sidebar.markdown("Desenvolvido por Vinicius P. Silva [LinkedIn](https://www.linkedin.com/in/-vini-silva/)")

# Fun√ß√£o para exibir gr√°fico Plotly
def plot_distribution(x, y, title, xlabel, ylabel):
    fig = go.Figure(data=[go.Bar(x=x, y=y)])
    fig.update_layout(title=title, xaxis_title=xlabel, yaxis_title=ylabel)
    st.plotly_chart(fig)



if pages == "Dados":

        st.title("Apresenta√ß√£o dos dados")
        df = st.session_state["data"]

        tipos='Todos'
        tipos = np.append(tipos,df["Data"].unique())
        tipo = st.sidebar.selectbox("Filtros", tipos)

        if tipo == 'Todos':
            df_filtered = df
        else:
            df_filtered = df[(df["Data"]==tipo)]

        #df_filtered
        st.dataframe(df_filtered,
                    column_config={
                        "Valor_BK": st.column_config.ProgressColumn(
                            "Valor_BK", format="%.2f", min_value=0, max_value=int(df_filtered["Valor_BK"].max()))
                        })

        st.write("""
        # Explica√ß√£o sobre o conjunto de dados
        O conjunto de dados cont√©m informa√ß√µes sobre a exporta√ß√£o brasileira anual. Cada linha representa um ano e inclui valores financeiros e varia√ß√µes percentuais associadas a diferentes categorias de exporta√ß√£o.

        ## Identifica√ß√£o do tipo das vari√°veis
        - **Data (Ano)**: Vari√°vel **quantitativa discreta**, representa o ano de refer√™ncia.
        - **Valor_BK, Valor_BI, Valor_BC, Valor_CL**: Vari√°veis **quantitativas cont√≠nuas**, representam valores monet√°rios de diferentes categorias de exporta√ß√£o.
        - **VarBK, VarBI, VarBC, VarCL**: Vari√°veis **quantitativas cont√≠nuas**, representam a varia√ß√£o percentual anual de cada categoria.
        - **Part_BK, Part_BI, Part_BC, Part_CL**: Vari√°veis **quantitativas cont√≠nuas**, representam a participa√ß√£o percentual de cada categoria no total.

        ## Principais perguntas de an√°lise
        1. Como evolu√≠ram os valores das exporta√ß√µes ao longo dos anos?
        2. Quais setores apresentaram maior crescimento ou queda em determinados per√≠odos?
        3. Como as varia√ß√µes percentuais refletem mudan√ßas econ√¥micas no Brasil?
        4. Qual categoria tem maior participa√ß√£o nas exporta√ß√µes ao longo do tempo?
        5. Existem padr√µes c√≠clicos ou tend√™ncias de longo prazo nos dados?
        """)



elif pages == "Analise seus Dados":
    st.header("An√°lisando os Dados")
    
    df = pd.read_excel("Exporta√ß√£o_Brasileira_Anual.xlsx", index_col=None)
    st.write("Amostra dos dados:")
    st.write(df.head())


    st.write("""

    ## Escolha de Distribui√ß√µes Estat√≠sticasüìä

    Com base no conjunto de dados, foram excolhidas as distribui√ß√µes **Normal** e **Poisson** para an√°lise.

    ### Justificativa das escolhas  

    1. **Distribui√ß√£o Normal**  
    - Os valores das exporta√ß√µes (**Valor_BK, Valor_BI, etc.**) representam grandezas cont√≠nuas e podem seguir uma distribui√ß√£o aproximadamente normal, especialmente se considerarmos um grande per√≠odo de tempo.  
    - Muitas vari√°veis econ√¥micas tendem a seguir uma distribui√ß√£o normal devido ao efeito da soma de m√∫ltiplos fatores independentes (Teorema do Limite Central).  

    2. **Distribui√ß√£o de Poisson**  
    - Se estivermos analisando eventos raros, como crises econ√¥micas que afetam drasticamente as exporta√ß√µes, a distribui√ß√£o de Poisson pode ser √∫til.  
    - Essa distribui√ß√£o √© usada para modelar a contagem de eventos que ocorrem em um intervalo de tempo, o que pode ser interessante para estudar a frequ√™ncia de anos com quedas abruptas nas exporta√ß√µes.

    ### Veja abaixo a an√°lise üëáüèæ


    """)

    
        
    colunas_numericas = df.select_dtypes(include=[np.number]).columns.tolist()
    if colunas_numericas:
        coluna_escolhida = st.selectbox("Escolha uma coluna: ", "Valor_BK")
        
        if coluna_escolhida:
            st.write("Resumo dos dados:")
            st.write(df[coluna_escolhida].describe())
            
            dist = st.selectbox("Escolha a distribui√ß√£o para an√°lise:", ["Poisson", "Normal"])
            
            if dist == "Poisson":
                
                col1, col2 = st.columns([0.3,0.7])
                
                lambda_est = df[coluna_escolhida].mean()

                x_min = col1.number_input("N√∫mero m√≠nimo de eventos",value=11000)
                x_max = col1.number_input("N√∫mero m√°ximo de eventos desejado",value= 14000)
                
                x = np.arange(x_min, x_max)
                y = stats.poisson.pmf(x, lambda_est)
                y_cdf = stats.poisson.cdf(x,lambda_est)

                df_poisson = pd.DataFrame({"X": x, "P(X)": y, "P(X ‚â§ k) (Acumulado)": np.cumsum(y),"P(X > k) (Acumulado Cauda Direita)": 1-np.cumsum(y)}).set_index("X")

                col2.write("Tabela de probabilidades:")
                col2.write(df_poisson)
                
                st.write("""
                ## Entendimentos sobre a Distribui√ß√£o de Poisson  
                Ao comparar a distribui√ß√£o de *Poisson* com os dados da coluna *Valor_BK*, observa-se que n√£o h√° um encaixe adequado. A distribui√ß√£o de *Poisson* √© utilizada para modelar a ocorr√™ncia de eventos discretos em um intervalo fixo de tempo ou espa√ßo, assumindo que esses eventos ocorrem de forma independente e a uma taxa m√©dia constante.  

                No entanto, os valores de *Valor_BK* representam vari√°veis financeiras que podem ser influenciadas por diversos fatores externos, como oscila√ß√µes na economia global, varia√ß√µes cambiais, mudan√ßas nas pol√≠ticas comerciais e demanda internacional. Esses fatores criam flutua√ß√µes imprevis√≠veis nos dados, dificultando o ajuste √† distribui√ß√£o de *Poisson*, que pressup√µe estabilidade na taxa de ocorr√™ncia.  

                Al√©m disso, a distribui√ß√£o de *Poisson* assume que a m√©dia e a vari√¢ncia dos dados s√£o aproximadamente iguais. No caso dos dados analisados, a variabilidade pode ser muito maior do que a m√©dia, indicando que os eventos subjacentes n√£o seguem uma frequ√™ncia fixa ao longo do tempo. O comportamento das exporta√ß√µes pode ser c√≠clico ou afetado por choques externos, violando o pressuposto de independ√™ncia entre as observa√ß√µes.  

                Dessa forma, os dados da coluna *Valor_BK* n√£o apresentam caracter√≠sticas compat√≠veis com a distribui√ß√£o de *Poisson*, pois est√£o sujeitos a varia√ß√µes externas que tornam a ocorr√™ncia dos eventos inst√°vel e imprevis√≠vel.  

                """)
                st.subheader(f"Estimativa de Œª (Taxa m√©dia de Ocorr√™ncia): {lambda_est:.2f}")
                prob_acum = st.toggle("Probabilidade Acumulada")
                if prob_acum:
                    st.write("Probabilidades 'somadas' desde a origem!")
                    y_selec = y_cdf
                    fig = go.Figure(data=[go.Line(x=x, y=y_selec)])
                    fig.update_layout(title="Distribui√ß√£o de Poisson Acumulada", xaxis_title="N√∫mero de eventos", yaxis_title="Probabilidade Acumulada")
                    st.plotly_chart(fig)
                else:
                    y_selec = y
                    plot_distribution(x, y_selec, "Distribui√ß√£o de Poisson", "N√∫mero de eventos", "Probabilidade")
                


                
            elif dist == "Normal":
                
                n = df[coluna_escolhida].count()
                mu_est = df[coluna_escolhida].mean()
                sigma_est = df[coluna_escolhida].std()
                st.subheader(f"Estimativa de Œº: {mu_est:.2f}, œÉ: {sigma_est:.2f}")


                # Create distplot with custom bin_size
                #colunas_categoricas = df.select_dtypes(include=[np.character]).#columns.tolist()
                
                #st.selectbox("Escolha uma vari√°vel qualitativa",colunas_categoricas)




                hist_data = [df[coluna_escolhida].dropna().tolist()]
                group_labels=['distplot']
                b_size = st.number_input("Largura de Classe - Histograma",min_value=0.1,value=10000.0)

                fig = ff.create_distplot(
                    hist_data, group_labels, bin_size=b_size)
                
                teorica = True
                if teorica:

                    # Adicionando a curva da distribui√ß√£o normal te√≥rica com m√©dia e desvio padr√£o da amostra
                    x = np.linspace(mu_est - 4*sigma_est, mu_est + 4*sigma_est, 100)
                    y = stats.norm.pdf(x, mu_est, sigma_est)

                    # Criando um trace da curva normal
                    fig.add_trace(go.Scatter(x=x, y=y, mode='lines', name='Curva Normal', line=dict(color='red')))
                
                st.write("""
                ## Entendimentos
                Ao sobrepor a distribui√ß√£o *Normal* com os dados da coluna *Valor_BK*, n√£o h√° um encaixe perfeito. Isso indica que os dados podem n√£o seguir uma perfeita distribui√ß√£o normal, o que pode ser explicado por diversos fatores.

                A varia√ß√£o dos dados pode ser influenciada por choques econ√¥micos, mudan√ßas nas pol√≠ticas de exporta√ß√£o, flutua√ß√µes cambiais e demanda internacional. Al√©m disso, distribui√ß√µes de dados financeiros costumam apresentar assimetrias, caudas longas ou a presen√ßa de valores extremos (*outliers*), o que pode distorcer o ajuste √† curva normal.

                Para entender melhor a distribui√ß√£o dos dados, √© necess√°rio utilizar ferramentas estat√≠sticas como histogramas, testes de normalidade (Shapiro-Wilk, Kolmogorov-Smirnov) e medidas de assimetria e curtose. Dependendo dos resultados, pode-se considerar outras distribui√ß√µes mais apropriadas, como a log-normal ou exponencial, que frequentemente descrevem melhor dados financeiros e econ√¥micos.

                """)



                st.plotly_chart(fig)

                p = ggplot(df, aes(sample=coluna_escolhida)) + geom_qq(size=3,colour='red',alpha=0.7) + geom_qq_line()+theme_bw()+labs(x="Quantis Te√≥ricos",y = "Quantis Amostrais", title="Gr√°fico QQPlot")
                st.pyplot(ggplot.draw(p))